version: 1
backend:
  phases:
    build:
      commands:
        # Install dependencies for backend
        - npm ci --cache .npm --prefer-offline
        # Install dependencies for each Lambda function
        - for dir in amplify/lambdas/*; do
            if [ -d "$dir" ]; then
              echo "Installing dependencies for $dir...";
              cd "$dir" && npm install && cd -;
            fi;
          done
        # Deploy the backend using ampx
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID --outputs-format dart
frontend:
  phases:
    preBuild:
      commands:
        # Install Flutter 3.24.5
        - wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.5-stable.tar.xz
        - tar xf flutter_linux_3.24.5-stable.tar.xz
        - export PATH="$PATH:`pwd`/flutter/bin"
        # Verify Flutter installation
        - flutter doctor
        # Clean and fetch dependencies
        - flutter clean
        - flutter pub get
    build:
      commands:
        - echo "Using environment variables from Amplify secrets..."
        - flutter build web \
            --dart-define=DEVICE_TABLE_NAME=$DEVICE_TABLE_NAME \
            --dart-define=IOT_CORE_ENDPOINT=$IOT_CORE_ENDPOINT \
            --dart-define=WEB_APP_URL=$WEB_APP_URL
  artifacts:
    baseDirectory: build/web
    files:
      - '**/*'
  cache:
    paths:
      - flutter/.pub-cache
      - node_modules
